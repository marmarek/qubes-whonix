#!/bin/bash -e
# vim: set ts=4 sw=4 sts=4 et :
#
# bind-directories - Binds directories which allows changes in Template-BasedVM to persist
#
# To umount all binds, just pass any arg in $1, like umount
#
# This file is part of Qubes+Whonix.
# Copyright (C) 2014 - 2015 Jason Mehring <nrgaway@gmail.com>
# License: GPL-2+
# Authors: Jason Mehring
#
#   This program is free software; you can redistribute it and/or
#   modify it under the terms of the GNU General Public License
#   as published by the Free Software Foundation; either version 2
#   of the License, or (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.

set -x

## This script has been upstreamed:
## upstream bind-directories functionality to Qubes
## https://phabricator.whonix.org/T414
## Use Qubes bind-dirs.sh rather than Whonix bind-directories once available.
## https://phabricator.whonix.org/T501
if [ -e /usr/lib/qubes/bind-dirs.sh ] || [ -e /usr/lib/qubes/init/bind-dirs.sh ] ; then
   exit 0
fi
qubes_core_agent_version="$(dpkg-query --show --showformat='${Version}' "qubes-core-agent")" || true
if dpkg --compare-versions "$qubes_core_agent_version" ge "3.2.8-1+deb8u1" ; then
   exit 0
fi

qubes_vm_type="$(qubesdb-read /qubes-vm-type)"

if [ "$qubes_vm_type" = "TemplateVM" ]; then
   # Do none of the following in a TemplateVM.
   exit 0
fi

qubes_vm_persistence="$(qubesdb-read /qubes-vm-persistence)"

if [ "$qubes_vm_persistence" = "none" ]; then
   # https://github.com/QubesOS/qubes-issues/issues/1328
   # Do none of the following in a DispVM.
   exit 0
fi

if [ -f "/var/run/qubes-service/qubes-dvm" ]; then
   # https://github.com/QubesOS/qubes-issues/issues/1328#issuecomment-169483029
   # Do none of the following in a DispVM.
   # During DispVM savefile generation, 'qubesdb-read /qubes-vm-persistence'
   # outputs 'rw'.
   exit 0
fi

# Array of directories to bind
BINDS=(
    '/rw/srv/whonix/var/lib/tor:/var/lib/tor'
    '/rw/srv/whonix/var/lib/whonix:/var/lib/whonix'
    '/rw/srv/whonix/var/lib/whonixcheck:/var/lib/whonixcheck'
    '/rw/srv/whonix/var/cache/whonix-setup-wizard:/var/cache/whonix-setup-wizard'
    '/rw/srv/whonix/var/cache/anon-base-files:/var/cache/anon-base-files'
    '/rw/srv/whonix/var/cache/tb-updater:/var/cache/tb-updater'
    '/rw/srv/qubes-whonix/var/cache/qubes-whonix:/var/cache/qubes-whonix'
    '/rw/srv/whonix/etc/tor:/etc/tor'
)

for bind in ${BINDS[@]}; do
    rw_dir="${bind%%:*}"
    ro_dir="${bind##*:}"

    # Make sure ro directory is not mounted
    umount "${ro_dir}" 2> /dev/null || true

    if [ -n "${1}" ]; then
        echo "Umounting ${1} only..."
        continue
    fi

    # Make sure ro directory exists
    # XXX: problematic access rights?
    if ! [ -d "${ro_dir}" ]; then
        mkdir -p "${ro_dir}"
    fi

    # Initially copy over data directories to /rw if rw directory does not exist
    # XXX: problematic access rights?
    if ! [ -d "${rw_dir}" ]; then
        mkdir -p "${rw_dir}"
        rsync -hax "${ro_dir}/." "${rw_dir}"
    fi

    # Bind the directory
    sync
    mount --bind "${rw_dir}" "${ro_dir}"
done
sync

exit 0
