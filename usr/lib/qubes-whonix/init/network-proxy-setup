#!/bin/bash -e
# vim: set ts=4 sw=4 sts=4 et :
#
# network-proxy-setup - Enables an extra internal network interface
#
# This file is part of Qubes+Whonix.
# Copyright (C) 2014 - 2015 Jason Mehring <nrgaway@gmail.com>
# License: GPL-2+
# Authors: Jason Mehring
#
#   This program is free software; you can redistribute it and/or
#   modify it under the terms of the GNU General Public License
#   as published by the Free Software Foundation; either version 2
#   of the License, or (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.

set -x

source /usr/lib/qubes-whonix/utility_functions.sh

qubes_vm_type="$(qubesdb-read /qubes-vm-type)"

if [ "$qubes_vm_type" = "TemplateVM" ]; then
   # Do none of the following in a TemplateVM.
   exit 0
fi

INTERFACE="eth1"

if [ ! -e /usr/share/anon-gw-base-files/gateway ]; then
   exit 0
fi

# XXX: Should check for qubes_vm_type being 'ProxyVM' or 'NetVM'?

# Setup Xen / Qubes proxy
network=$(qubesdb-read /qubes-netvm-network 2>/dev/null)
if [ "x$network" != "x" ]; then

    if [ -e /proc/sys/kernel ] && ! [ -e /proc/sys/kernel/modules_disabled ]; then
      readonly modprobe_fail_cmd='true'
    else
      readonly modprobe_fail_cmd='false'
    fi

    gateway=$(qubesdb-read /qubes-netvm-gateway)
    netmask=$(qubesdb-read /qubes-netvm-netmask)
    secondary_dns=$(qubesdb-read /qubes-netvm-secondary-dns)
    modprobe netbk 2> /dev/null || modprobe xen-netback || "${modprobe_fail_cmd}"
    echo "NS1=$gateway" > /var/run/qubes/qubes-ns
    echo "NS2=$secondary_dns" >> /var/run/qubes/qubes-ns
    echo "0" > /proc/sys/net/ipv4/ip_forward
    /sbin/ethtool -K eth0 sg off || true
fi

# Now, assign it the netvm-gateway IP address
ip link show ${INTERFACE} &> /dev/null || {
    ip=$(qubesdb-read /qubes-netvm-gateway 2> /dev/null)
    if [ x${ip} != x ]; then
      # Create a dummy eth1 interface so tor can bind to it if there
      # are no DOMU virtual machines connected at the moment
      ip link add ${INTERFACE} type dummy || true

      netmask=$(qubesdb-read /qubes-netvm-netmask)
      gateway=$(qubesdb-read /qubes-netvm-gateway)
      /sbin/ifconfig ${INTERFACE} ${ip} netmask 255.255.255.255
      /sbin/ifconfig ${INTERFACE} up
      /sbin/ethtool -K ${INTERFACE} sg off || true
      /sbin/ethtool -K ${INTERFACE} tx off || true

      ip link set ${INTERFACE} up
    fi
}
